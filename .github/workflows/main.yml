name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.10.5' # Update to a Flutter version that includes Dart SDK >= 3.2.6

    - name: Disable telemetry
      run: flutter config --no-analytics

    - name: Install dependencies
      run: flutter pub get

    - name: Run tests
      run: flutter test

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Build iOS
      if: runner.os == 'macOS'
      run: flutter build ios --release

    - name: Upload iOS build
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v2
      with:
        name: app-release.ipa
        path: build/ios/ipa/app-release.ipa

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create Git Tag
      id: tag
      run: |
        VERSION=$(date +'%Y.%m.%d-%H%M%S')
        git tag $VERSION
        echo "::set-output name=VERSION::$VERSION"
        git push origin $VERSION

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.VERSION }}
        release_name: Release ${{ steps.tag.outputs.VERSION }}
        body: |
          Release description here
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload IPA to Release
      if: runner.os == 'macOS'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/ios/ipa/app-release.ipa
        asset_name: app-release.ipa
        asset_content_type: application/octet-stream
